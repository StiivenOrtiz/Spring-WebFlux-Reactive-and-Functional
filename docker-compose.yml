services:
  # MongoDB
  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo_user
      MONGO_INITDB_ROOT_PASSWORD: mongo_pass
      MONGO_INITDB_DATABASE: taskdb
    ports:
      - '27017:27017'
    volumes:
      - ./mongodb-container/mongo-init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    command: ["mongod", "--auth"]
    healthcheck:                    
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://mongo_user:mongo_pass@localhost:27017/admin --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Mongo Express
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - '8081:8081'
    depends_on:
      mongodb:
        condition : service_healthy
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongo_user
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongo_pass
      ME_CONFIG_MONGODB_URL: mongodb://mongo_user:mongo_pass@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: pass
    networks:
      - app-network
    
  # Spring Boot application
  spring-boot:
    image: spring-boot
    build:
      context: ./spring-webflux-app
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
        SPRING_DATA_MONGODB_URI: mongodb://mongo_user:mongo_pass@mongodb:27017/taskdb?authSource=admin
    networks:
      - app-network

networks:
  app-network:
    driver: bridge